<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
             http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd              
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- 激活@Controller模式 -->
	<mvc:annotation-driven />

	<!-- 权限拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<mvc:mapping path="/group/**"/>
			<mvc:mapping path="/role/**"/>
			<mvc:mapping path="/category/**"/>
			<mvc:mapping path="/article/**"/>
			<mvc:mapping path="/system/**"/>
			<mvc:mapping path="/webInfo/**"/>
			<bean class="top.duyt.web.interceptor.AccessInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="200000000" />
	</bean>

	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->
	<context:component-scan base-package="top.duyt.web.*" />

	<!-- 设置静态资源的路径 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
	<mvc:resources location="/attachments/" mapping="/attachments/**" />
	<mvc:resources location="/dwr/" mapping="/dwr/**" />
	<!-- 一个*代表文件夹下的子目录，两个*代表还包含子目录下的内容 -->

	<!-- 默认采用BeanNameViewResolver的请求解析方式，即 <bean name="/hello.html" class="XXXpackage.XXXclass"/> 
		的方式进行请求映射，该配置默认开启，不写亦可，开发中一般采用注解映射 -->

	<!-- 注解方式的请求映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" 
		/> -->
	<!-- 视图映射 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<!--  定义异常的全局控制，映射和视图 -->
     <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
     	<property name="exceptionMappings">  
            <props>  
                <prop key="java.lang.Exception">error</prop>  
                <prop key="java.lang.Throwable">error</prop>  
            </props>  
        </property>  
        <property name="statusCodes">  
            <props>  
                <prop key="errors/error">500</prop>  
                <prop key="errors/404">404</prop> 
                <prop key="errors/400">400</prop> 
            </props>  
        </property>  
        默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置  
        <property name="defaultErrorView" value="error"></property>  
        默认HTTP状态码  
        <property name="defaultStatusCode" value="500"></property>  
     </bean> -->
	
</beans>
